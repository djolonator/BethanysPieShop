@model CategoryViewModel

@{ 
    ViewBag.Tittle = Model !=null? "Edit" : "Create";
}

<h2>@ViewBag.Tittle</h2>
<hr />

@using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

<div class="form-horizontal">
 @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.CategoryId)
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CategoryId, new { htmlAtributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CategoryName, new { htmlAtributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAtributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default"/>
        </div>
    </div>
</div>
            }